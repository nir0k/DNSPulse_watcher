// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: pkg/gRPC/confighub.proto

package gRPC

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define the message for SegmentConfStruct
type SegmentConfStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentName string            `protobuf:"bytes,1,opt,name=segmentName,proto3" json:"segmentName,omitempty"`
	General     *GeneralConfig    `protobuf:"bytes,2,opt,name=general,proto3" json:"general,omitempty"`
	Sync        *SyncConfig       `protobuf:"bytes,3,opt,name=sync,proto3" json:"sync,omitempty"`
	Prometheus  *PrometheusConfig `protobuf:"bytes,4,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
	Polling     *PollingConfig    `protobuf:"bytes,5,opt,name=polling,proto3" json:"polling,omitempty"`
}

func (x *SegmentConfStruct) Reset() {
	*x = SegmentConfStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentConfStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentConfStruct) ProtoMessage() {}

func (x *SegmentConfStruct) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentConfStruct.ProtoReflect.Descriptor instead.
func (*SegmentConfStruct) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{0}
}

func (x *SegmentConfStruct) GetSegmentName() string {
	if x != nil {
		return x.SegmentName
	}
	return ""
}

func (x *SegmentConfStruct) GetGeneral() *GeneralConfig {
	if x != nil {
		return x.General
	}
	return nil
}

func (x *SegmentConfStruct) GetSync() *SyncConfig {
	if x != nil {
		return x.Sync
	}
	return nil
}

func (x *SegmentConfStruct) GetPrometheus() *PrometheusConfig {
	if x != nil {
		return x.Prometheus
	}
	return nil
}

func (x *SegmentConfStruct) GetPolling() *PollingConfig {
	if x != nil {
		return x.Polling
	}
	return nil
}

type GeneralConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckInterval int32  `protobuf:"varint,1,opt,name=checkInterval,proto3" json:"checkInterval,omitempty"`
	Hash          string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GeneralConfig) Reset() {
	*x = GeneralConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralConfig) ProtoMessage() {}

func (x *GeneralConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralConfig.ProtoReflect.Descriptor instead.
func (*GeneralConfig) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{1}
}

func (x *GeneralConfig) GetCheckInterval() int32 {
	if x != nil {
		return x.CheckInterval
	}
	return 0
}

func (x *GeneralConfig) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type SyncConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled bool   `protobuf:"varint,1,opt,name=isEnabled,proto3" json:"isEnabled,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SyncConfig) Reset() {
	*x = SyncConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncConfig) ProtoMessage() {}

func (x *SyncConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncConfig.ProtoReflect.Descriptor instead.
func (*SyncConfig) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{2}
}

func (x *SyncConfig) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *SyncConfig) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type PrometheusConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url          string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	AuthEnabled  bool                   `protobuf:"varint,2,opt,name=authEnabled,proto3" json:"authEnabled,omitempty"`
	Username     string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password     string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	MetricName   string                 `protobuf:"bytes,5,opt,name=metricName,proto3" json:"metricName,omitempty"`
	RetriesCount int32                  `protobuf:"varint,6,opt,name=retriesCount,proto3" json:"retriesCount,omitempty"`
	BufferSize   int32                  `protobuf:"varint,7,opt,name=bufferSize,proto3" json:"bufferSize,omitempty"`
	Labels       *PrometheusLabelConfig `protobuf:"bytes,8,opt,name=labels,proto3" json:"labels,omitempty"`
}

func (x *PrometheusConfig) Reset() {
	*x = PrometheusConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusConfig) ProtoMessage() {}

func (x *PrometheusConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusConfig.ProtoReflect.Descriptor instead.
func (*PrometheusConfig) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{3}
}

func (x *PrometheusConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PrometheusConfig) GetAuthEnabled() bool {
	if x != nil {
		return x.AuthEnabled
	}
	return false
}

func (x *PrometheusConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PrometheusConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PrometheusConfig) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *PrometheusConfig) GetRetriesCount() int32 {
	if x != nil {
		return x.RetriesCount
	}
	return 0
}

func (x *PrometheusConfig) GetBufferSize() int32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

func (x *PrometheusConfig) GetLabels() *PrometheusLabelConfig {
	if x != nil {
		return x.Labels
	}
	return nil
}

type PrometheusLabelConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opcode             bool `protobuf:"varint,1,opt,name=opcode,proto3" json:"opcode,omitempty"`
	Authoritative      bool `protobuf:"varint,2,opt,name=authoritative,proto3" json:"authoritative,omitempty"`
	Truncated          bool `protobuf:"varint,3,opt,name=truncated,proto3" json:"truncated,omitempty"`
	Rcode              bool `protobuf:"varint,4,opt,name=rcode,proto3" json:"rcode,omitempty"`
	RecursionDesired   bool `protobuf:"varint,5,opt,name=recursionDesired,proto3" json:"recursionDesired,omitempty"`
	RecursionAvailable bool `protobuf:"varint,6,opt,name=recursionAvailable,proto3" json:"recursionAvailable,omitempty"`
	AuthenticatedData  bool `protobuf:"varint,7,opt,name=authenticatedData,proto3" json:"authenticatedData,omitempty"`
	CheckingDisabled   bool `protobuf:"varint,8,opt,name=checkingDisabled,proto3" json:"checkingDisabled,omitempty"`
	PollingRate        bool `protobuf:"varint,9,opt,name=pollingRate,proto3" json:"pollingRate,omitempty"`
	Recursion          bool `protobuf:"varint,10,opt,name=recursion,proto3" json:"recursion,omitempty"`
}

func (x *PrometheusLabelConfig) Reset() {
	*x = PrometheusLabelConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusLabelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusLabelConfig) ProtoMessage() {}

func (x *PrometheusLabelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusLabelConfig.ProtoReflect.Descriptor instead.
func (*PrometheusLabelConfig) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{4}
}

func (x *PrometheusLabelConfig) GetOpcode() bool {
	if x != nil {
		return x.Opcode
	}
	return false
}

func (x *PrometheusLabelConfig) GetAuthoritative() bool {
	if x != nil {
		return x.Authoritative
	}
	return false
}

func (x *PrometheusLabelConfig) GetTruncated() bool {
	if x != nil {
		return x.Truncated
	}
	return false
}

func (x *PrometheusLabelConfig) GetRcode() bool {
	if x != nil {
		return x.Rcode
	}
	return false
}

func (x *PrometheusLabelConfig) GetRecursionDesired() bool {
	if x != nil {
		return x.RecursionDesired
	}
	return false
}

func (x *PrometheusLabelConfig) GetRecursionAvailable() bool {
	if x != nil {
		return x.RecursionAvailable
	}
	return false
}

func (x *PrometheusLabelConfig) GetAuthenticatedData() bool {
	if x != nil {
		return x.AuthenticatedData
	}
	return false
}

func (x *PrometheusLabelConfig) GetCheckingDisabled() bool {
	if x != nil {
		return x.CheckingDisabled
	}
	return false
}

func (x *PrometheusLabelConfig) GetPollingRate() bool {
	if x != nil {
		return x.PollingRate
	}
	return false
}

func (x *PrometheusLabelConfig) GetRecursion() bool {
	if x != nil {
		return x.Recursion
	}
	return false
}

type PollingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path           string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Hash           string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Delimiter      string `protobuf:"bytes,3,opt,name=delimiter,proto3" json:"delimiter,omitempty"`
	ExtraDelimiter string `protobuf:"bytes,4,opt,name=extraDelimiter,proto3" json:"extraDelimiter,omitempty"`
	PollTimeout    int32  `protobuf:"varint,5,opt,name=pollTimeout,proto3" json:"pollTimeout,omitempty"`
}

func (x *PollingConfig) Reset() {
	*x = PollingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingConfig) ProtoMessage() {}

func (x *PollingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingConfig.ProtoReflect.Descriptor instead.
func (*PollingConfig) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{5}
}

func (x *PollingConfig) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PollingConfig) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *PollingConfig) GetDelimiter() string {
	if x != nil {
		return x.Delimiter
	}
	return ""
}

func (x *PollingConfig) GetExtraDelimiter() string {
	if x != nil {
		return x.ExtraDelimiter
	}
	return ""
}

func (x *PollingConfig) GetPollTimeout() int32 {
	if x != nil {
		return x.PollTimeout
	}
	return 0
}

// Define the message for Csv
type Csv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server                  string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	IpAddress               string `protobuf:"bytes,2,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	Domain                  string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Location                string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Site                    string `protobuf:"bytes,5,opt,name=site,proto3" json:"site,omitempty"`
	ServerSecurityZone      string `protobuf:"bytes,6,opt,name=serverSecurityZone,proto3" json:"serverSecurityZone,omitempty"`
	Prefix                  string `protobuf:"bytes,7,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Protocol                string `protobuf:"bytes,8,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Zonename                string `protobuf:"bytes,9,opt,name=zonename,proto3" json:"zonename,omitempty"`
	QueryCount              string `protobuf:"bytes,10,opt,name=queryCount,proto3" json:"queryCount,omitempty"`
	ZonenameWithRecursion   string `protobuf:"bytes,11,opt,name=zonenameWithRecursion,proto3" json:"zonenameWithRecursion,omitempty"`
	QueryCountWithRecursion string `protobuf:"bytes,12,opt,name=queryCountWithRecursion,proto3" json:"queryCountWithRecursion,omitempty"`
	ServiceMode             string `protobuf:"bytes,13,opt,name=serviceMode,proto3" json:"serviceMode,omitempty"`
}

func (x *Csv) Reset() {
	*x = Csv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Csv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Csv) ProtoMessage() {}

func (x *Csv) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Csv.ProtoReflect.Descriptor instead.
func (*Csv) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{6}
}

func (x *Csv) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *Csv) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Csv) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Csv) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Csv) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *Csv) GetServerSecurityZone() string {
	if x != nil {
		return x.ServerSecurityZone
	}
	return ""
}

func (x *Csv) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *Csv) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Csv) GetZonename() string {
	if x != nil {
		return x.Zonename
	}
	return ""
}

func (x *Csv) GetQueryCount() string {
	if x != nil {
		return x.QueryCount
	}
	return ""
}

func (x *Csv) GetZonenameWithRecursion() string {
	if x != nil {
		return x.ZonenameWithRecursion
	}
	return ""
}

func (x *Csv) GetQueryCountWithRecursion() string {
	if x != nil {
		return x.QueryCountWithRecursion
	}
	return ""
}

func (x *Csv) GetServiceMode() string {
	if x != nil {
		return x.ServiceMode
	}
	return ""
}

// Define a message to hold a list of Csv messages
type CsvList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Csvs []*Csv `protobuf:"bytes,1,rep,name=csvs,proto3" json:"csvs,omitempty"`
}

func (x *CsvList) Reset() {
	*x = CsvList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsvList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsvList) ProtoMessage() {}

func (x *CsvList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsvList.ProtoReflect.Descriptor instead.
func (*CsvList) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{7}
}

func (x *CsvList) GetCsvs() []*Csv {
	if x != nil {
		return x.Csvs
	}
	return nil
}

// Request message for GetSegmentConfig
type GetSegmentConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	SegmentName string `protobuf:"bytes,2,opt,name=segmentName,proto3" json:"segmentName,omitempty"`
}

func (x *GetSegmentConfigRequest) Reset() {
	*x = GetSegmentConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSegmentConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSegmentConfigRequest) ProtoMessage() {}

func (x *GetSegmentConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSegmentConfigRequest.ProtoReflect.Descriptor instead.
func (*GetSegmentConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{8}
}

func (x *GetSegmentConfigRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetSegmentConfigRequest) GetSegmentName() string {
	if x != nil {
		return x.SegmentName
	}
	return ""
}

// Request message for GetCsv
type GetCsvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	SegmentName string `protobuf:"bytes,2,opt,name=segmentName,proto3" json:"segmentName,omitempty"`
}

func (x *GetCsvRequest) Reset() {
	*x = GetCsvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_gRPC_confighub_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCsvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCsvRequest) ProtoMessage() {}

func (x *GetCsvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gRPC_confighub_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCsvRequest.ProtoReflect.Descriptor instead.
func (*GetCsvRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gRPC_confighub_proto_rawDescGZIP(), []int{9}
}

func (x *GetCsvRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetCsvRequest) GetSegmentName() string {
	if x != nil {
		return x.SegmentName
	}
	return ""
}

var File_pkg_gRPC_confighub_proto protoreflect.FileDescriptor

var file_pkg_gRPC_confighub_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x52, 0x50, 0x43, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x68, 0x75, 0x62, 0x22, 0x85, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a,
	0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x3b, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x49, 0x0a,
	0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x40, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9c, 0x02, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x38, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0xff, 0x02, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2a, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x0d,
	0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x65, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x6f, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xb5, 0x03,
	0x0a, 0x03, 0x43, 0x73, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5a,
	0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x7a, 0x6f, 0x6e, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x7a, 0x6f, 0x6e, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x7a, 0x6f, 0x6e, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x7a, 0x6f, 0x6e, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x52, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x63, 0x75, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x63, 0x75, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x2d, 0x0a, 0x07, 0x43, 0x73, 0x76, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x04, 0x63, 0x73, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x43, 0x73, 0x76, 0x52, 0x04,
	0x63, 0x73, 0x76, 0x73, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x73,
	0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x32, 0xa0, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x75, 0x62, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x47,
	0x65, 0x74, 0x43, 0x73, 0x76, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x68, 0x75,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x73, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x43, 0x73, 0x76, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x52, 0x50, 0x43,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_gRPC_confighub_proto_rawDescOnce sync.Once
	file_pkg_gRPC_confighub_proto_rawDescData = file_pkg_gRPC_confighub_proto_rawDesc
)

func file_pkg_gRPC_confighub_proto_rawDescGZIP() []byte {
	file_pkg_gRPC_confighub_proto_rawDescOnce.Do(func() {
		file_pkg_gRPC_confighub_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_gRPC_confighub_proto_rawDescData)
	})
	return file_pkg_gRPC_confighub_proto_rawDescData
}

var file_pkg_gRPC_confighub_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_gRPC_confighub_proto_goTypes = []interface{}{
	(*SegmentConfStruct)(nil),       // 0: confighub.SegmentConfStruct
	(*GeneralConfig)(nil),           // 1: confighub.GeneralConfig
	(*SyncConfig)(nil),              // 2: confighub.SyncConfig
	(*PrometheusConfig)(nil),        // 3: confighub.PrometheusConfig
	(*PrometheusLabelConfig)(nil),   // 4: confighub.PrometheusLabelConfig
	(*PollingConfig)(nil),           // 5: confighub.PollingConfig
	(*Csv)(nil),                     // 6: confighub.Csv
	(*CsvList)(nil),                 // 7: confighub.CsvList
	(*GetSegmentConfigRequest)(nil), // 8: confighub.GetSegmentConfigRequest
	(*GetCsvRequest)(nil),           // 9: confighub.GetCsvRequest
}
var file_pkg_gRPC_confighub_proto_depIdxs = []int32{
	1, // 0: confighub.SegmentConfStruct.general:type_name -> confighub.GeneralConfig
	2, // 1: confighub.SegmentConfStruct.sync:type_name -> confighub.SyncConfig
	3, // 2: confighub.SegmentConfStruct.prometheus:type_name -> confighub.PrometheusConfig
	5, // 3: confighub.SegmentConfStruct.polling:type_name -> confighub.PollingConfig
	4, // 4: confighub.PrometheusConfig.labels:type_name -> confighub.PrometheusLabelConfig
	6, // 5: confighub.CsvList.csvs:type_name -> confighub.Csv
	8, // 6: confighub.ConfigHubService.GetSegmentConfig:input_type -> confighub.GetSegmentConfigRequest
	9, // 7: confighub.ConfigHubService.GetCsv:input_type -> confighub.GetCsvRequest
	0, // 8: confighub.ConfigHubService.GetSegmentConfig:output_type -> confighub.SegmentConfStruct
	7, // 9: confighub.ConfigHubService.GetCsv:output_type -> confighub.CsvList
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_gRPC_confighub_proto_init() }
func file_pkg_gRPC_confighub_proto_init() {
	if File_pkg_gRPC_confighub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_gRPC_confighub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentConfStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_gRPC_confighub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_gRPC_confighub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_gRPC_confighub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_gRPC_confighub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusLabelConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_gRPC_confighub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_gRPC_confighub_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Csv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_gRPC_confighub_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsvList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_gRPC_confighub_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSegmentConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_gRPC_confighub_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCsvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_gRPC_confighub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_gRPC_confighub_proto_goTypes,
		DependencyIndexes: file_pkg_gRPC_confighub_proto_depIdxs,
		MessageInfos:      file_pkg_gRPC_confighub_proto_msgTypes,
	}.Build()
	File_pkg_gRPC_confighub_proto = out.File
	file_pkg_gRPC_confighub_proto_rawDesc = nil
	file_pkg_gRPC_confighub_proto_goTypes = nil
	file_pkg_gRPC_confighub_proto_depIdxs = nil
}
